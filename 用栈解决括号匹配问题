//众所周知用栈可以解决括号匹配问题
//思路：将左括号入栈，将栈顶元素和将要读取的元素进行比较，如果是左+右，即将栈内元素弹出。
//这样就是一个括号匹配的过程。
//这里使用了一个栈，空间复杂度比较高，有没有办法提高空间复杂度呢？
//提供一个思路，用变量代替栈，入栈变量num++，出栈num--，最后如果num==0，那么说明括号匹配成功，反之失败
package kuaishou;
import java.util.*;
public class kuohaopipei {
	public static boolean isValid(String s) {
		Stack<Character> stack = new Stack<>();//创建一个栈
		for(int i=0;i<s.length();i++) {
			if((s.charAt(i)=='(')||(s.charAt(i)=='[')||(s.charAt(i)=='{')) {//如果是左括号
				stack.push(s.charAt(i));
			}
			if((s.charAt(i)==')')||(s.charAt(i)==']')||(s.charAt(i)=='}')){//如果是有括号
				if(stack.empty()) {//如果栈为空，则证明括号不匹配，返回false
					return false;
				}
				
			}
			if((stack.peek()=='('&&s.charAt(i)==')')||
					(stack.peek()=='['&&s.charAt(i)==']')||(stack.peek()=='{'&&s.charAt(i)=='}')){
				stack.pop();	// 如果栈顶元素和下一个右括号相匹配，则将其栈顶元素出栈
			}
		}
		if(stack.empty()) 
			return true;
		else
			return false;
		
	}
	
	public static void main(String[] args) {
		System.out.println("Please enter a sentence include'(',')','{','}','[',']':");
		Scanner sc=new Scanner(System.in);
		String str=sc.nextLine();
		System.out.println("The result is:"+isValid(str));
	}

}



今天尝试了一下用变量代替栈，将空间复杂度降为O(1)，成功了！
package kuaishou;
import java.util.*;
public class kuohaopipei {
	public static boolean isValid(String s) {
		int num=0;
		for(int i=0;i<s.length();i++) {
			if(s.charAt(i)=='('||s.charAt(i)=='['||s.charAt(i)=='{') {
				num++;   //假装入栈操作num++
			}
			if(s.charAt(i)==')'||s.charAt(i)==']'||s.charAt(i)=='}') {

				if(num==0) {
					return false; //num==0,说明想象中的栈里面没有左括号用来匹配
				}
			}

			if(s.charAt(i)==')'||s.charAt(i)==']'
					||s.charAt(i)=='}') {
				if(num>0) //如果num>0，说明有左括号可以用来匹配
				num--;  //假装出栈操作num--
			}
		}
		if(num==0)  //最终如果num==0，说明全部匹配成功，否则失败
			return true;
		else
			return false;
		}
	
	
	public static void main(String[] args) {
		System.out.println("Please enter a sentence include'(',')','{','}','[',']':");
		Scanner sc=new Scanner(System.in);
		String str=sc.nextLine();
		System.out.println("The result is:"+isValid(str));
	}

}

