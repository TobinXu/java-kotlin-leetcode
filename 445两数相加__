//在002中做过两数相加的题，当时给的条件是，链表中数字逆序排列，
//也就是链表头是低位，链表尾是高位，这样方便你从表头遍历
//445这道题相当于提高了一点难度，链表头是高位，链表尾是低位，
//如果还想按照原来的想法，那就需要借助栈，将它重新变成从低位开始相加
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
       if(l1==null)return l2;
       if(l2==null)return l1;
       Stack<Integer>stack1=new Stack<>();
       Stack<Integer>stack2=new Stack<>();
       while(l1!=null){
           stack1.push(l1.val);
           l1=l1.next;
       }
       while(l2!=null){
           stack2.push(l2.val);
           l2=l2.next;
       }
       int carry=0;
       ListNode head =null;
       while(!stack1.isEmpty()||!stack2.isEmpty()||carry>0){
          int sum=carry;
          sum+=stack1.isEmpty()?0:stack1.pop();
          sum+=stack2.isEmpty()?0:stack2.pop();
           ListNode node =new ListNode(sum%10);
           node.next=head;//头插法
           head=node;
           carry=sum/10;}
           return head;
    }
}
